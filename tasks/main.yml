---

- name: Clone Docker instance repository
  become: true
  ansible.builtin.git:
    repo: '{{ docker_deploy_git_repo }}'
    dest: '{{ docker_deploy_base_dir }}/{{ docker_deploy_name }}'
    single_branch: true
    accept_hostkey: true
    version: '{{ docker_deploy_git_branch }}'
  when: docker_deploy_git_repo is defined
  register: docker_deploy_git_status

- name: Create Docker instance directory
  become: true
  ansible.builtin.file:
    path: '{{ docker_deploy_base_dir }}/{{ docker_deploy_name }}'
    state: directory
  when: docker_deploy_git_repo is not defined

- name: Make sure destination directories for files exists
  become: true
  ansible.builtin.file:
    path: '{{ docker_deploy_base_dir }}/{{ docker_deploy_name }}/{{ item.path | dirname }}'
    state: directory
  loop: '{{ docker_deploy_files | default([]) }}'

- name: Touch files
  become: true
  ansible.builtin.file:
    path: '{{ docker_deploy_base_dir }}/{{ docker_deploy_name }}/{{ item.path }}'
    state: touch
    modification_time: preserve
    access_time: preserve
    mode: '{{ item.mode }}'
  loop: '{{ docker_deploy_files | default([]) }}'

- name: Make sure destination directories for templates exists
  become: true
  ansible.builtin.file:
    path: '{{ docker_deploy_base_dir }}/{{ docker_deploy_name }}/{{ item.path | dirname }}'
    state: directory
  loop: '{{ docker_deploy_templates | selectattr("state", "equalto", "directory") }}'
  loop_control:
    label: "{{ item.path }}"

- name: Deploy file templates
  become: true
  ansible.builtin.template:
    src: '{{ docker_deploy_template_prefix | default(".")}}/{{ item.path }}'
    dest: '{{ docker_deploy_base_dir }}/{{ docker_deploy_name }}/{{ item.path | regex_replace("\.j2$", "") }}'
    mode: '{{ item.mode | default("0755") }}'
  loop: '{{ docker_deploy_templates | selectattr("state", "equalto", "file") }}'
  loop_control:
    label: "{{ item.path }}"
  register: docker_deploy_template_status

- name: Create Docker volumes
  become: true
  ansible.builtin.command: docker volume create '{{ item }}'
  loop: '{{ docker_deploy_volumes | default([]) }}'
  changed_when: false

- name: Create Docker networks
  become: true
  community.docker.docker_network:
    name: '{{ item }}'
  loop: '{{ docker_deploy_networks | default([]) }}'
  changed_when: false

- name: Create docker-compose@{{ docker_deploy_name }}.service
  become: true
  ansible.builtin.systemd:
    name: docker-compose@{{ docker_deploy_name }}.service
    enabled: true
    masked: false
  when: docker_deploy_git_repo is defined and docker_deploy_git_status.changed
    or docker_deploy_template_status.changed

- name: Restart docker-compose@{{ docker_deploy_name }}.service
  become: true
  ansible.builtin.systemd:
    name: docker-compose@{{ docker_deploy_name }}.service
    daemon_reload: true
    state: restarted
  when: docker_deploy_git_repo is defined and docker_deploy_git_status.changed
    or docker_deploy_template_status.changed

...
